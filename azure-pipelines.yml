trigger:
- master

schedules:
- cron: "0 8 * * Mon-Fri"
  displayName: M-F 3:00 AM (UTC - 5) NC daily build
  branches:
    include:
        - master

stages:

- stage: Compile
  displayName: Compile and Docker Java Sources
  jobs:
  - job: MVNWorker
    displayName: Worker
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'worker/pom.xml'
          goals: 'clean package verify'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          testRunTitle: 'Worker MVN'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.12'
          mavenVersionOption: 'Default'
          mavenOptions: '-Xmx3072m'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          checkStyleRunAnalysis: false
          findBugsRunAnalysis: false
          # Publish code coverage results
      # Publish Cobertura or JaCoCo code coverage results from a build
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: "./target/jacoco-reports"
      - task: Docker@2    
        inputs:
          command: 'build'
          Dockerfile: 'worker/Dockerfile'
          buildContext: 'worker/'

  - job: MVNPulser
    displayName: Pulser
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pulser/pom.xml'
          goals: 'clean package verify'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          testRunTitle: 'Pulser MVN'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.12'
          mavenVersionOption: 'Default'
          mavenOptions: '-Xmx3072m'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          checkStyleRunAnalysis: false
          findBugsRunAnalysis: false
      - task: Docker@2
        inputs:
          command: 'build'
          Dockerfile: 'pulser/Dockerfile'
          buildContext: 'pulser/'

          
- stage: DockerizedBuilds
  displayName: Build Containers with Docker
  dependsOn: Compile
  jobs:
  - job: DockerAPI
    displayName: Dockerize API Container
    steps:
    - task: Docker@2
      inputs:
        command: 'build'
        repository: microptope/api
        Dockerfile: 'api/Dockerfile'
        buildContext: 'api/'
  - job: DockerDatabase
    displayName: Dockerize Database Container
    steps:
    - task: Docker@2
      inputs: 
       command: 'build'
       repository: microptope/database
       Dockerfile: 'database/Dockerfile'
       buildContext: 'database/'
  - job: DockerUI
    displayName: Build and Dockerize UI
    steps:
    - task: Docker@2
      inputs: 
        command: 'build'
        repository: microptope/ui
        Dockerfile: 'ui/Dockerfile'
        buildContext: 'ui/'
  - job: DockerBuildPulser
    displayName: Fullbuild Pulser
    steps:
    - task: Docker@2
      inputs: 
        command: 'build'
        repository: microptope/pulser
        Dockerfile: 'pulser/BuildDockerfile'
        buildContext: 'pulser/'
  - job: DockerBuildWorker
    displayName: Fullbuild Worker
    steps:
    - task: Docker@2
      inputs: 
        command: 'build'
        repository: microptope/worker
        Dockerfile: 'worker/BuildDockerfile'
        buildContext: 'worker/'
